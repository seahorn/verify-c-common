function(sea_attach_bc)
  set(SOURCE_EXE ${ARGV0})
  set(TARGET_BC "${SOURCE_EXE}.ir")
  set(TARGET_OBJ "${SOURCE_EXE}.obj")

  set_target_properties(${SOURCE_EXE} PROPERTIES LINKER_LANGUAGE C)
  target_compile_options(${SOURCE_EXE} PUBLIC -O1 -Xclang -disable-llvm-optzns)
  target_compile_options(${SOURCE_EXE} PUBLIC -Wno-macro-redefined)
  target_compile_options(${SOURCE_EXE} PUBLIC -g)
  target_compile_options(${SOURCE_EXE} PUBLIC -fdeclspec)
  set_property(TARGET ${SOURCE_EXE} PROPERTY EXCLUDE_FROM_ALL ON)

  llvmir_attach_bc_target(TARGET ${TARGET_OBJ} DEPENDS ${SOURCE_EXE})
  set_property(TARGET ${TARGET_OBJ} PROPERTY EXCLUDE_FROM_ALL ON)
  llvmir_attach_link_target(TARGET ${TARGET_BC} DEPENDS ${TARGET_OBJ})
  add_dependencies(${TARGET_BC} ${TARGET_OBJ})
  set_property(TARGET ${TARGET_BC} PROPERTY EXCLUDE_FROM_ALL OFF)
endfunction()

function(sea_get_file_name VAR LLVMIR_TARGET)
  get_property(DIR TARGET ${LLVMIR_TARGET} PROPERTY LLVMIR_DIR)
  get_property(FILES TARGET ${LLVMIR_TARGET} PROPERTY LLVMIR_FILES)
  set(${VAR} "${DIR}/${FILES}" PARENT_SCOPE)
endfunction()

macro(add_fuzz_executable name)
  cmake_parse_arguments(ARG
    "EXCLUDE_FROM_ALL" "" "" ${ARGN})

  set(EXE_NAME "${name}_fuzz")

  add_executable(${EXE_NAME} ${ARG_UNPARSED_ARGUMENTS})

  target_compile_options(${EXE_NAME} PRIVATE -Wno-macro-redefined)
  target_compile_options(${EXE_NAME} PRIVATE -g)
  target_compile_options(${EXE_NAME} PRIVATE -fdeclspec)
  target_compile_definitions(${EXE_NAME} PRIVATE main=_main)
  target_compile_definitions(${EXE_NAME} PRIVATE MAX_BUFFER_SIZE=${MAX_BUFFER_SIZE})
  target_link_libraries(${EXE_NAME} PRIVATE nd_fuzz)

  target_compile_options(${EXE_NAME} PRIVATE -fsanitize=fuzzer -fsanitize=address)
  target_link_libraries(${EXE_NAME} PRIVATE -fsanitize=fuzzer -fsanitize=address)
endmacro()

function(sea_attach_fuzz name)
  get_property(IN_FILES TARGET ${name} PROPERTY SOURCES) 
  add_fuzz_executable(${name} ${IN_FILES})
endfunction()



set(VERIFY_FLAGS $ENV{VERIFY_FLAGS} CACHE STRING "Flags for verify script")
separate_arguments(VERIFY_FLAGS)

function(sea_add_unsat_test TARGET)
  sea_get_file_name(BC ${TARGET}.ir)
  add_test(NAME "${TARGET}_unsat_test" COMMAND ${VERIFY_CMD} ${VERIFY_FLAGS} --expect=unsat ${BC})
endfunction()

configure_file(sea.yaml sea.yaml @ONLY)
configure_file(sea_cex_base.yaml sea.cex.yaml @ONLY)
configure_file(sea_vac.yaml sea.vac.yaml @ONLY)

add_definitions(-D__SEAHORN__)
add_definitions(-DVACCHECK)

add_subdirectory(lib)

add_subdirectory(jobs/add_size_checked)
add_subdirectory(jobs/add_size_saturating)
add_subdirectory(jobs/mul_size_checked)
add_subdirectory(jobs/mul_size_saturating)
add_subdirectory(jobs/is_power_of_two)
add_subdirectory(jobs/round_up_to_power_of_two)

add_subdirectory(jobs/nospec_mask)

add_subdirectory(jobs/ptr_eq)

add_subdirectory(jobs/array_eq_c_str)
add_subdirectory(jobs/array_eq_c_str_ignore_case)
add_subdirectory(jobs/array_eq_ignore_case)
add_subdirectory(jobs/array_list_back)
add_subdirectory(jobs/array_list_capacity)
add_subdirectory(jobs/array_list_clean_up)
add_subdirectory(jobs/array_list_clear)
add_subdirectory(jobs/array_list_comparator_string)
add_subdirectory(jobs/array_list_copy)
add_subdirectory(jobs/array_list_ensure_capacity)
add_subdirectory(jobs/array_list_erase)
add_subdirectory(jobs/array_list_front)
add_subdirectory(jobs/array_list_get_at)
add_subdirectory(jobs/array_list_get_at_ptr)
add_subdirectory(jobs/array_list_init_dynamic)
add_subdirectory(jobs/array_list_init_static)
add_subdirectory(jobs/array_list_length)
add_subdirectory(jobs/array_list_pop_back)
add_subdirectory(jobs/array_list_pop_front)
add_subdirectory(jobs/array_list_pop_front_n)
add_subdirectory(jobs/array_list_push_back)
add_subdirectory(jobs/array_list_set_at)
add_subdirectory(jobs/array_list_shrink_to_fit)
add_subdirectory(jobs/array_list_sort)
add_subdirectory(jobs/array_list_swap)
add_subdirectory(jobs/array_list_swap_contents)
add_subdirectory(jobs/byte_buf_advance)
add_subdirectory(jobs/byte_buf_append)
add_subdirectory(jobs/byte_buf_append_dynamic)
add_subdirectory(jobs/byte_buf_append_with_lookup)
add_subdirectory(jobs/byte_buf_cat)
add_subdirectory(jobs/byte_buf_clean_up)
add_subdirectory(jobs/byte_buf_clean_up_secure)
add_subdirectory(jobs/byte_buf_eq)
add_subdirectory(jobs/byte_buf_eq_c_str)
add_subdirectory(jobs/byte_buf_eq_c_str_ignore_case)
add_subdirectory(jobs/byte_buf_eq_ignore_case)
add_subdirectory(jobs/byte_buf_from_array)
add_subdirectory(jobs/byte_buf_from_c_str)
add_subdirectory(jobs/byte_buf_from_empty_array)
add_subdirectory(jobs/byte_buf_init)
add_subdirectory(jobs/byte_buf_init_copy)
add_subdirectory(jobs/byte_buf_init_copy_from_cursor)
add_subdirectory(jobs/byte_buf_reserve)
add_subdirectory(jobs/byte_buf_reserve_relative)
add_subdirectory(jobs/byte_buf_reset)
add_subdirectory(jobs/byte_buf_secure_zero)
add_subdirectory(jobs/byte_buf_write)
add_subdirectory(jobs/byte_buf_write_be16)
add_subdirectory(jobs/byte_buf_write_be32)
add_subdirectory(jobs/byte_buf_write_be64)
add_subdirectory(jobs/byte_buf_write_from_whole_buffer)
add_subdirectory(jobs/byte_buf_write_from_whole_cursor)
add_subdirectory(jobs/byte_buf_write_from_whole_string)
add_subdirectory(jobs/byte_buf_write_u8)
add_subdirectory(jobs/byte_cursor_advance)
add_subdirectory(jobs/byte_cursor_advance_nospec)
add_subdirectory(jobs/byte_cursor_compare_lexical)
add_subdirectory(jobs/byte_cursor_compare_lookup)
add_subdirectory(jobs/byte_cursor_eq)
add_subdirectory(jobs/byte_cursor_eq_byte_buf)
add_subdirectory(jobs/byte_cursor_eq_byte_buf_ignore_case)
add_subdirectory(jobs/byte_cursor_eq_c_str)
add_subdirectory(jobs/byte_cursor_eq_c_str_ignore_case)
add_subdirectory(jobs/byte_cursor_eq_ignore_case)
add_subdirectory(jobs/byte_cursor_from_array)
add_subdirectory(jobs/byte_cursor_from_buf)
add_subdirectory(jobs/byte_cursor_from_c_str)
add_subdirectory(jobs/byte_cursor_from_string)
add_subdirectory(jobs/linked_list_back)
add_subdirectory(jobs/linked_list_front)
add_subdirectory(jobs/linked_list_begin)
add_subdirectory(jobs/linked_list_end)
add_subdirectory(jobs/linked_list_remove)
add_subdirectory(jobs/linked_list_init)
add_subdirectory(jobs/linked_list_reset)
add_subdirectory(jobs/linked_list_next)
add_subdirectory(jobs/linked_list_pop_back)
add_subdirectory(jobs/linked_list_pop_front)
add_subdirectory(jobs/linked_list_push_back)
add_subdirectory(jobs/linked_list_push_front)
add_subdirectory(jobs/linked_list_swap_contents)
add_subdirectory(jobs/linked_list_insert_after)
add_subdirectory(jobs/linked_list_insert_before)
add_subdirectory(jobs/string_bytes)
add_subdirectory(jobs/string_compare)
add_subdirectory(jobs/string_eq)
add_subdirectory(jobs/string_eq_byte_buf)
add_subdirectory(jobs/string_eq_byte_buf_ignore_case)
add_subdirectory(jobs/string_eq_byte_cursor)
add_subdirectory(jobs/string_eq_byte_cursor_ignore_case)
add_subdirectory(jobs/string_eq_c_str)
add_subdirectory(jobs/string_eq_c_str_ignore_case)
add_subdirectory(jobs/string_eq_ignore_case)
add_subdirectory(jobs/string_new_from_array)
add_subdirectory(jobs/string_new_from_c_str)
add_subdirectory(jobs/string_new_from_string)